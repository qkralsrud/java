package com.human.pmk.Gugudan.java;
/*
 * 1.JVM은 자바프로그램을 실행시키기위한 가상컴퓨터.
 * 	 자바소스코드를 컴파일 하여  바이트 코드로 변환하고 ,이 바이트코드를 특정 운영체제에서 실행가능한 기계어로 해석실행
 * 	 메모리관리를 수행하고 불필요한 객체를 제거한다
 * 	 스레드 관리를 수행하여 다중 스레드 환셩에서 안정적인 실행을 지원
 * 	 예외처리를 제공하여 프로그램의 안정성 보장 
 * 	 클래스 로딩및 동적 링크를 수행하여 필요한 클래스를 로드하고 연결합니다.
 *   jlt컴파일러를 통해 바이트 코드를 실제 기계어로 변환하여 실행 속도를 향상 시킵니다.
 * 
 * 2.IDE(통합 개발환경) 설치, 명령 프롬프트에서 java -version 입력으로 실행버전 확인
 * 
 * 3.오버로딩은 같은 이름을 가진 메서드나 생성자를 여러개 정의하는 것을 말한다. 
 * 	메서드의 이름은 같지만 매개변수의 타입 ,순서, 개수가 다른경우에 사용된다.
 * 	하나의 변수이름으로 여러가지 다른타입의 입력을 처리할수 있다.
 * 
 * 4.[접근제한자] 반환타입 메서드이름 (매개변수)
 * 	접근제한자 : 메서드가 접근될수 있는 범위를 지정 > public
 * 반환타입 : 메서드가 실행된 후 반환되는 값의 타입을 지정 (반환값이 없을경우 void)
 * 메서드 이름 : 호출할때 사용 
 * 매개변수: 메서드가 받을 입력값의 목록을 지정 
 * 
 * 5. 생성자란 객체를 생성할때 호출되는 특별한 종류의 메서드, 생성자는 객체가 메모리에 할당되고 초기화될때 실행되어
 * 객체의 초기상태를 설정.
 * 생성자의 이름은 클래스의 이름과 동일해야함 
 * 생성자는 반환타입을 가지지 않음 
 * 객체를 생성할때 new 키워드와 함께 호출 
 * 
 */
public class PMK {

	public static void main(String[] args) {
		int i;
		int k;
		
		for(i=2;i<10;i++) {
			if(i%2 != 0) {
				System.out.println("< "+i+"단 >");
			for(k=1;k<10;k++) {
					System.out.println(i+" X "+k +"="+ i*k);
				}
			}
		}
		
	}

	
	
	
	
	
}
